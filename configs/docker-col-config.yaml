# This config file will be used by the KM-Agent on it's first initialization in docker mode.

receivers:
  filelog:
    include:
      - /var/log/**/*.log
      - /var/lib/docker/containers/**/*.log*
    exclude:
      - /var/log/pods/kmagent*/**/*.log
    include_file_name_resolved: true
    include_file_path: true
    include_file_path_resolved: true
    max_log_size: "1MiB"

  docker_stats:
    endpoint: "unix:///var/run/docker.sock"
    collection_interval: 60s
    timeout: 10s

  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      disk:
      network:
      filesystem:
        include_virtual_filesystems: true
        exclude_fs_types:
          fs_types:
            - autofs
            - binfmt_misc
            - bpf
            - cgroup
            - cgroup2
            - configfs
            - debugfs
            - devpts
            - devtmpfs
            - fusectl
            - hugetlbfs
            - iso9660
            - mqueue
            - nsfs
            - overlay
            - proc
            - procfs
            - pstore
            - rpc_pipefs
            - securityfs
            - selinuxfs
            - squashfs
            - sysfs
            - tracefs
          match_type: strict
        exclude_mount_points:
          mount_points:
            - /dev/*
            - /proc/*
            - /sys/*
            - /snap/*
            - /var/lib/docker/*
            - /var/lib/containerd/*
            - /var/lib/kubelet/*
            - /run/containerd/*
            - /run/k3s/*
            - /run/credentials/*
            - /run/user/*
          match_type: regexp
      load:
        cpu_average: true
  otlp:
    protocols:
      grpc:
      http:

exporters:
  debug:
    verbosity: basic
    sampling_initial: 2
    sampling_thereafter: 100
  otlphttp:
    sending_queue:
      enabled: true
      num_consumers: 10 # Increase to process more items in parallel
      queue_size: 10000 # Increase queue size to handle bursts
    endpoint: ${env:KM_COLLECTOR_ENDPOINT}
    headers:
      Authorization: ${env:KM_API_KEY}

processors:
  batch:
    send_batch_size: 10000
    timeout: 30s
  resourcedetection:
    detectors: [env, system, docker]
    override: false
  resource:
    attributes:
      - key: service.name
        action: insert
        from_attribute: host.name

extensions:

service:
  pipelines:
    metrics:
      receivers: [hostmetrics, docker_stats]
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp, debug]
    logs:
      receivers: [filelog]
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp, debug]
