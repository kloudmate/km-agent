# This config file will be used by the KM-Agent on it's first initialization.

receivers:
  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      load:
        cpu_average: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
  otlp:
    protocols:
      grpc:
      http:

exporters:
  debug:
  otlphttp:
    sending_queue:
      enabled: true
      num_consumers: 10 # Increase to process more items in parallel
      queue_size: 10000 # Increase queue size to handle bursts
    endpoint: ${env:KM_COLLECTOR_ENDPOINT}
    headers:
        Authorization: ${env:KM_API_KEY}

processors:
  batch:
    send_batch_size: 10000
    timeout: 10s
  resourcedetection:
    detectors: [system]
    system:
      resource_attributes:
        host.name:
          enabled: true
        host.id:
          enabled: true
        os.type:
          enabled: false
  resource:
    attributes:
      - key: service.name
        action: insert
        from_attribute: host.name
  cumulativetodelta:
    include:
      match_type: strict
      metrics:
        - system.network.io
        - system.disk.io
        - system.disk.operations.rate
        - system.network.packets.rate
        - system.network.errors.rate
        - system.network.dropped.rate
        - k8s.pod.network.io.rate
        - k8s.pod.network.errors.rate
        - k8s.node.network.io.rate
        - k8s.node.network.errors.rate
  deltatorate:
    metrics:
      - system.network.io
      - system.disk.io
      - system.disk.operations.rate
      - system.network.packets.rate
      - system.network.errors.rate
      - system.network.dropped.rate
      - k8s.pod.network.io.rate
      - k8s.pod.network.errors.rate
      - k8s.node.network.io.rate
      - k8s.node.network.errors.rate
  transform/ostype:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["os.type"], resource.attributes["os.type"])
  transform/deleteostype:
    metric_statements:
      - context: datapoint
        statements:
          - delete_key(attributes, "os.type")        -
  transform/ratecalculation/copymetric:
    error_mode: ignore
    metric_statements:
      - context: metric
        statements:
          - copy_metric(name="system.network.io.rate") where metric.name == "system.network.io"
          - copy_metric(name="system.disk.io.rate") where metric.name == "system.disk.io"
          - copy_metric(name="system.disk.operations.rate") where metric.name == "system.disk.operations"
          - copy_metric(name="system.network.packets.rate") where metric.name == "system.network.packets"
          - copy_metric(name="system.network.errors.rate") where metric.name == "system.network.errors"
          - copy_metric(name="system.network.dropped.rate") where metric.name == "system.network.dropped"
          - copy_metric(name="k8s.pod.network.io.rate") where metric.name == "k8s.pod.network.io"
          - copy_metric(name="k8s.pod.network.errors.rate") where metric.name == "k8s.pod.network.errors"
          - copy_metric(name="k8s.node.network.io.rate") where metric.name == "k8s.node.network.io"
          - copy_metric(name="k8s.node.network.errors.rate") where metric.name == "k8s.node.network.errors"
  transform/ratecalculation/sumtogauge:
    error_mode: ignore
    metric_statements:
      - context: metric
        statements:
          - convert_sum_to_gauge() where metric.name == "system.network.io"
          - convert_sum_to_gauge() where metric.name == "system.disk.io"
          - convert_sum_to_gauge() where metric.name == "system.disk.operations"
          - convert_sum_to_gauge() where metric.name == "system.network.packets"
          - convert_sum_to_gauge() where metric.name == "system.network.errors"
          - convert_sum_to_gauge() where metric.name == "system.network.dropped"
          - convert_sum_to_gauge() where metric.name == "k8s.pod.network.io"
          - convert_sum_to_gauge() where metric.name == "k8s.pod.network.errors"
          - convert_sum_to_gauge() where metric.name == "k8s.node.network.io"
          - convert_sum_to_gauge() where metric.name == "k8s.node.network.errors"
extensions:
  # zpages:
  #   endpoint: :55679

service:
  # extensions: [zpages]
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [resourcedetection, resource, batch]
      exporters: [debug, otlphttp]
    logs:
      receivers: [hostmetrics]
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp]