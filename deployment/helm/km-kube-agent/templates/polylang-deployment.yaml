{{- if .Values.featuresEnabled.apm -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.polylangDetectorName }}
  namespace: km-agent
  labels:
    {{- toYaml .Values.daemonsetLabels | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- toYaml .Values.daemonsetLabels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.daemonsetLabels | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- if and .Values.tolerations (ne (typeOf .Values.tolerations) "string") (gt (len .Values.tolerations) 0) }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{- toYaml .Values.nodeAffinity | nindent 10 }}
      {{- end }}
      containers:
      - name: polylang-detector
        image: "{{ .Values.polylangDetector.image.repository }}:{{ .Values.polylangDetector.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.polylangDetector.image.pullPolicy }}
        securityContext:
          # Can run without privileged if using crictl method
          privileged: false
          capabilities:
            add:
            - SYS_PTRACE   # Still useful for some process inspection
        env:
          - name: KM_SVC_ACCOUNT_NAME
            value: {{ .Values.serviceAccountName }}
          - name: KM_IGNORED_NS
            value: "kube-system,kube-public,kube-node-lease,kube-service-catalog,kubernetes-dashboard,local-path-storage,tigera-operator,calico-system,cilium,cilium-system,istio-system,linkerd,linkerd-viz,gatekeeper-system,cert-manager,velero,flux-system,argocd,monitoring,ingress-nginx,aws-node,kube-system-aws,gke-system,gke-managed-cim,gke-managed-filestorecsi,gke-managed-system,gke-managed-volumepopulator,gmp-public,gmp-system,aks-system,openebs,rook-ceph,km-agent"
          - name: KM_CFG_UPDATER_RPC_ADDR
            value: {{ printf "cfg-updater-rpc-svc.km-agent.svc.cluster.local:%s" (.Values.KM_CFG_UPDATER_RPC_ADDR | toString) }}
        volumeMounts:
        # Mount docker/containerd socket for crictl access
        - name: container-runtime
          mountPath: /var/run/containerd/containerd.sock
          readOnly: true
        # Optional: mount docker socket as fallback
        - name: docker-socket
          mountPath: /var/run/docker.sock
          readOnly: true
        resources:
          requests:
            cpu: "256m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "640Mi"
      volumes:
      - name: container-runtime
        hostPath:
          path: /var/run/containerd/containerd.sock
          type: Socket
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
{{- end }}